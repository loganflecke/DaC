# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/development/cicd/templates/
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  - convert
  - deploy

convert-rules:
  stage: convert
  image: python:3.10
  before_script:
    - echo "Converting sigma rules into Splunk..."
    - pip install --upgrade pip
    - pip install sigma-cli
    - sigma plugin install splunk
  script:
    - mkdir -p ./converted_rules
    - |
      for rule in ./rules/windows/*.yml; do
        filename=$(basename "$rule" .yml).spl
        out_file="./converted_rules/$filename"
        sigma convert -t splunk -p splunk_windows "$rule" -o "$out_file"
      done
  artifacts:
    paths:
      - converted_rules/
#         sigma convert -p splunk_windows -t splunk "$rule" > "$rule";

deploy-rules:
    stage: deploy
    image: python:3.10
    dependencies: 
        - convert-rules
    before_script:
        - pip install --upgrade pip
        - pip install splunk-sdk
    script:
        - ls converted_rules
        - python3 deploy_to_splunk.py
        # - for rule in converted_rules/*; do
        #     echo "$rule";
        #     cat "$rule";
        #     done
        # - mkdir -p deployment-logs
    artifacts:
        paths:
            - deployment-logs/